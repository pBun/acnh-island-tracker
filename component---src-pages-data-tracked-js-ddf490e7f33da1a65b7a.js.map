{"version":3,"sources":["webpack:///./src/pages/data/tracked.js"],"names":["useStyles","makeStyles","theme","list","marginBottom","spacing","subheader","backgroundColor","palette","background","paper","avatar","TrackedVillagersPage","classes","session","React","useContext","SessionContext","villagerIcons","useVillagerIcons","recentSightings","sightings","sort","a","b","timestamp","recentSightingsGroupedByDate","map","sighting","index","islandTimestamp","islandOffset","villager","getVillager","icon","date","format","time","reduce","acc","data","push","pageTitle","length","title","className","Object","keys","Fragment","key","button","component","href","name","target","rel","alt","src","primary","personality","species","secondary"],"mappings":"gXAkBMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,aAAcF,EAAMG,QAAQ,IAEhCC,UAAW,CACPC,gBAAiBL,EAAMM,QAAQC,WAAWC,OAE9CC,OAAQ,OAKG,SAASC,IACpB,IAAMC,EAAUb,IACRc,EAAYC,IAAMC,WAAWC,KAA7BH,QAEFI,EAAgBC,cAEhBC,EAAkBN,EAAQO,UAAUC,MACtC,SAACC,EAAGC,GAAJ,OAAUA,EAAEC,UAAYF,EAAEE,aAkBxBC,EAhB2BN,EAAgBO,KAAI,SAACC,EAAUC,GAC5D,IAAMC,EAAkD,iBAAzBhB,EAAQiB,aACjCH,EAASH,UAAYX,EAAQiB,aAC7B,GACN,MAAO,CACHC,SAAUC,YAAYL,EAASI,UAC/BE,KAAMhB,EAAcU,EAASI,UAC7BP,UAAWG,EAASH,UACpBU,KAAML,EACAM,YAAON,EAAiB,eACxB,eACNO,KAAMP,EACAM,YAAON,EAAiB,UACxB,mBAGgDQ,QAC1D,SAACC,EAAKC,GAEF,OADCD,EAAIC,EAAKL,MAAQI,EAAIC,EAAKL,OAAS,IAAIM,KAAKD,GACtCD,IAEX,IAEEG,EAAS,sBACXtB,EAAgBuB,OAAhB,IAA6BvB,EAAgBuB,OAA7C,IAAyD,IAE7D,OACI,kBAAC,IAAD,CAAMC,MAAOF,GACT,kBAAC,IAAD,CAAMG,UAAWhC,EAAQV,MACpBiB,EAAgBuB,OACXG,OAAOC,KAAKrB,GAA8BC,KAAI,SAAAQ,GAAI,OAC9C,kBAAC,IAAMa,SAAP,CAAgBC,IAAKd,GACjB,kBAAC,IAAD,CAAeU,UAAWhC,EAAQP,WAC7B6B,GAEJT,EAA6BS,GAAMR,KAAI,SAAAa,GAAI,OACxC,kBAAC,IAAD,CACIS,IAAKT,EAAKf,UACVyB,QAAM,EACNC,UAAU,IACVC,KAAI,+BAAiCZ,EAAKR,SAASqB,KACnDC,OAAO,SACPC,IAAI,uBAEJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIV,UAAWhC,EAAQF,OACnB6C,IAAKhB,EAAKR,SAASqB,KACnBI,IAAKjB,EAAKN,QAGlB,kBAAC,IAAD,CACIwB,QAAYlB,EAAKR,SAASqB,KAAnB,KAA4Bb,EAAKR,SAAS2B,YAA1C,IAAyDnB,EAAKR,SAAS4B,QAAvE,IACPC,UAAWrB,EAAKH,eAMpC","file":"component---src-pages-data-tracked-js-ddf490e7f33da1a65b7a.js","sourcesContent":["import React from \"react\";\nimport { format } from \"date-fns\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nimport { getVillager } from \"../../util/villager\";\n\nimport SessionContext from \"../../context/currentSession\";\n\nimport useVillagerIcons from \"../../hooks/useVillagerIcons\";\n\nimport Page from \"../../components/page\";\n\nconst useStyles = makeStyles(theme => ({\n    list: {\n        marginBottom: theme.spacing(2),\n    },\n    subheader: {\n        backgroundColor: theme.palette.background.paper,\n    },\n    avatar: {\n\n    },\n}));\n\nexport default function TrackedVillagersPage() {\n    const classes = useStyles();\n    const { session } = React.useContext(SessionContext);\n\n    const villagerIcons = useVillagerIcons();\n\n    const recentSightings = session.sightings.sort(\n        (a, b) => b.timestamp - a.timestamp\n    );\n    const recentSightingsFormatted = recentSightings.map((sighting, index) => {\n        const islandTimestamp = typeof session.islandOffset === 'number'\n            ? sighting.timestamp + session.islandOffset\n            : '';\n        return {\n            villager: getVillager(sighting.villager),\n            icon: villagerIcons[sighting.villager],\n            timestamp: sighting.timestamp,\n            date: islandTimestamp\n                ? format(islandTimestamp, \"MMM d, yyyy\")\n                : 'Unknown Date',\n            time: islandTimestamp\n                ? format(islandTimestamp, \"h:mm a\")\n                : 'Unknown Time',\n        };\n    });\n    const recentSightingsGroupedByDate = recentSightingsFormatted.reduce(\n        (acc, data) => {\n            (acc[data.date] = acc[data.date] || []).push(data);\n            return acc;\n        },\n        {}\n    );\n    const pageTitle = `Tracked Villagers ${\n        recentSightings.length ? `(${recentSightings.length})` : \"\"\n    }`;\n    return (\n        <Page title={pageTitle}>\n            <List className={classes.list}>\n                {recentSightings.length\n                    ? Object.keys(recentSightingsGroupedByDate).map(date => (\n                          <React.Fragment key={date}>\n                              <ListSubheader className={classes.subheader}>\n                                  {date}\n                              </ListSubheader>\n                              {recentSightingsGroupedByDate[date].map(data => (\n                                  <ListItem\n                                      key={data.timestamp}\n                                      button\n                                      component=\"a\"\n                                      href={`https://nookipedia.com/wiki/${data.villager.name}`}\n                                      target=\"_blank\"\n                                      rel=\"noopener noreferrer\"\n                                  >\n                                      <ListItemAvatar>\n                                          <Avatar\n                                              className={classes.avatar}\n                                              alt={data.villager.name}\n                                              src={data.icon}\n                                          />\n                                      </ListItemAvatar>\n                                      <ListItemText\n                                          primary={`${data.villager.name} (${data.villager.personality} ${data.villager.species})`}\n                                          secondary={data.time}\n                                      />\n                                  </ListItem>\n                              ))}\n                          </React.Fragment>\n                      ))\n                    : \"\"}\n            </List>\n        </Page>\n    );\n}\n"],"sourceRoot":""}
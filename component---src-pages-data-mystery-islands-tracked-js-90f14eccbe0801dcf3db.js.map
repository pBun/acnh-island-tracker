{"version":3,"sources":["webpack:///./src/pages/data/mystery-islands/tracked.js","webpack:///./src/components/TrackedVillagersList.js"],"names":["TrackedMysteryIslandVillagersPage","props","filteredSightings","React","useContext","SessionContext","sightings","filter","s","type","pageLabel","pageTitle","length","title","pathname","location","useStyles","makeStyles","theme","list","marginBottom","spacing","padding","listSubheader","paddingLeft","paddingRight","backgroundColor","palette","background","paper","TrackedVillagersList","classes","otherProps","getVillager","useVillagers","sortedSightings","sort","a","b","timestamp","formattedSightings","map","sighting","index","villager","id","date","format","sightingsGroupedByDate","groupBy","className","Object","keys","Fragment","key"],"mappings":"8FAAA,gFAgCeA,UAnBf,SAA2CC,GAAO,IAIxCC,EAFgBC,IAAMC,WAAWC,KAA/BC,UAE4BC,QAAO,SAAAC,GAAC,MAAe,mBAAXA,EAAEC,QAE5CC,EAAeC,8BACjBT,EAAkBU,OAAlB,IAA+BV,EAAkBU,OAAjD,IAA6D,IAEjE,OACI,kBAAC,IAAD,CAAMC,MAAOH,GACT,kBAAC,IAAD,CAAKG,MANK,4BAMaC,SAAUb,EAAMc,SAASD,WAChD,kBAAC,IAAD,CACIR,UAAWJ,O,6OChB3B,IAAMc,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,aAAcF,EAAMG,QAAQ,GAC5BC,QAASJ,EAAMG,QAAQ,EAAG,EAAG,IAEjCE,cAAe,CACXC,YAAaN,EAAMG,QAAQ,GAC3BI,aAAcP,EAAMG,QAAQ,GAC5BK,gBAAiBR,EAAMS,QAAQC,WAAWC,WAInC,SAASC,EAAqB7B,GACzC,IAAM8B,EAAUf,IAEZV,EAEAL,EAFAK,UACG0B,E,oIAJyC,CAK5C/B,EAL4C,eAOxCgC,EAAgBC,cAAhBD,YAEFE,EAAkB7B,EAAU8B,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEC,UAAYF,EAAEE,aAC3DC,EAAqBL,EAAgBM,KAAI,SAACC,EAAUC,GACtD,IAAMC,EAAWX,EAAYS,EAASE,SAASC,IAC/C,OAAO,OAAP,wBACOH,GADP,IAEII,KAAMC,YAAOL,EAASH,UAAW,eACjCK,gBAGFI,EAAyBC,YAAQT,EAAoB,QAC3D,OACI,kBAAC,IAAD,eAAMU,UAAWnB,EAAQZ,MAAUa,GAC9BG,EAAgBvB,OACbuC,OAAOC,KAAKJ,GAAwBP,KAAI,SAAAK,GAAI,OACxC,kBAAC,IAAMO,SAAP,CAAgBC,IAAKR,GACjB,kBAAC,IAAD,CAAeI,UAAWnB,EAAQR,eAAgBuB,GACjDE,EAAuBF,GAAML,KAAI,SAAAC,GAAQ,OACtC,kBAAC,IAAD,CACIY,IAAKZ,EAASH,UACdK,SAAUF,EAASE,SACnBF,SAAUA,WAM1B,kBAAC,IAAD,CAAeQ,UAAWnB,EAAQR,eAAlC","file":"component---src-pages-data-mystery-islands-tracked-js-90f14eccbe0801dcf3db.js","sourcesContent":["import React from \"react\";\n// import { makeStyles } from \"@material-ui/core/styles\";\n\nimport SessionContext from \"../../../context/SessionContext\";\n\nimport Page from \"../../../components/Page\";\nimport SEO from \"../../../components/SEO\";\nimport TrackedVillagersList from \"../../../components/TrackedVillagersList\";\n\n// const useStyles = makeStyles(theme => ({\n//\n// }));\n\nfunction TrackedMysteryIslandVillagersPage(props) {\n    // const classes = useStyles();\n    const { sightings } = React.useContext(SessionContext);\n\n    const filteredSightings = sightings.filter(s => s.type === \"mystery-island\");\n    const pageTitle = \"Mystery Island Encounters\";\n    const pageLabel = `${pageTitle} ${\n        filteredSightings.length ? `(${filteredSightings.length})` : \"\"\n    }`;\n    return (\n        <Page title={pageLabel}>\n            <SEO title={pageTitle} pathname={props.location.pathname} />\n            <TrackedVillagersList\n                sightings={filteredSightings}\n            />\n        </Page>\n    );\n}\n\nexport default TrackedMysteryIslandVillagersPage;\n","import React from \"react\";\nimport { format } from \"date-fns\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\n\nimport { groupBy } from \"../util/list\";\nimport useVillagers from \"../hooks/useVillagers\";\nimport VillagerListItem from \"../components/VillagerListItem\";\n\nconst useStyles = makeStyles(theme => ({\n    list: {\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(1, 0, 4),\n    },\n    listSubheader: {\n        paddingLeft: theme.spacing(5),\n        paddingRight: theme.spacing(5),\n        backgroundColor: theme.palette.background.paper,\n    },\n}));\n\nexport default function TrackedVillagersList(props) {\n    const classes = useStyles();\n    const {\n        sightings,\n        ...otherProps\n    } = props;\n\n    const { getVillager } = useVillagers();\n\n    const sortedSightings = sightings.sort((a, b) => b.timestamp - a.timestamp);\n    const formattedSightings = sortedSightings.map((sighting, index) => {\n        const villager = getVillager(sighting.villager.id);\n        return {\n            ...sighting,\n            date: format(sighting.timestamp, \"MMM d, yyyy\"),\n            villager,\n        };\n    });\n    const sightingsGroupedByDate = groupBy(formattedSightings, 'date');\n    return (\n        <List className={classes.list} {...otherProps}>\n            {sortedSightings.length ? (\n                Object.keys(sightingsGroupedByDate).map(date => (\n                    <React.Fragment key={date}>\n                        <ListSubheader className={classes.listSubheader}>{date}</ListSubheader>\n                        {sightingsGroupedByDate[date].map(sighting => (\n                            <VillagerListItem\n                                key={sighting.timestamp}\n                                villager={sighting.villager}\n                                sighting={sighting}\n                            />\n                        ))}\n                    </React.Fragment>\n                ))\n            ) : (\n                <ListSubheader className={classes.listSubheader}>\n                    No villagers tracked\n                </ListSubheader>\n            )}\n        </List>\n    );\n}\n"],"sourceRoot":""}
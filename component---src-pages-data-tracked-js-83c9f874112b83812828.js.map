{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/internal/svg-icons/Person.js","webpack:///./node_modules/@material-ui/core/esm/Avatar/Avatar.js","webpack:///./node_modules/@material-ui/core/esm/ListItemAvatar/ListItemAvatar.js","webpack:///./src/pages/data/tracked.js","webpack:///./src/hooks/useVillagerIcons.js","webpack:///./src/util/villager.js"],"names":["createSvgIcon","d","props","ref","alt","childrenProp","children","classes","className","_props$component","component","Component","imgProps","sizes","src","srcSet","_props$variant","variant","other","loaded","_ref","_React$useState","setLoaded","active","image","Image","onload","onerror","useLoaded","hasImg","hasImgNotFailing","img","Person","fallback","root","system","colorDefault","withStyles","theme","position","display","alignItems","justifyContent","flexShrink","width","height","fontFamily","typography","fontSize","pxToRem","lineHeight","borderRadius","overflow","userSelect","color","palette","background","backgroundColor","type","grey","circle","rounded","shape","square","textAlign","objectFit","textIndent","name","context","ListContext","alignItemsFlexStart","minWidth","marginTop","useStyles","makeStyles","list","marginBottom","spacing","subheader","paper","avatar","borderColor","borderWidth","borderStyle","IndexPage","session","React","useContext","SessionContext","villagerIcons","villagerIconsQuery","allFile","edges","forEach","edge","node","publicURL","useVillagerIcons","recentSightings","sightings","sort","a","b","timestamp","recentSightingsGroupedByDate","map","sighting","islandTimestamp","islandOffset","villager","getVillager","date","format","time","icon","reduce","acc","data","push","pageTitle","length","title","List","Object","keys","Fragment","key","ListSubheader","ListItem","button","href","target","rel","Avatar","ListItemText","primary","personality","species","secondary","VILLAGERS","villagerData","feed","entry","v","gsx$villager","$t","gsx$species","gender","gsx$gender","gsx$personality","villagerName","find"],"mappings":"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","file":"component---src-pages-data-tracked-js-83c9f874112b83812828.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Person from '../internal/svg-icons/Person';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexShrink: 0,\n      width: 40,\n      height: 40,\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(20),\n      lineHeight: 1,\n      borderRadius: '50%',\n      overflow: 'hidden',\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the root element if not `src` or `srcSet`. */\n    colorDefault: {\n      color: theme.palette.background[\"default\"],\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {},\n\n    /* Styles applied to the root element if `variant=\"rounded\"`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"square\"`. */\n    square: {\n      borderRadius: 0\n    },\n\n    /* Styles applied to the img element if either `src` or `srcSet` is defined. */\n    img: {\n      width: '100%',\n      height: '100%',\n      textAlign: 'center',\n      // Handle non-square image. The property isn't supported by IE 11.\n      objectFit: 'cover',\n      // Hide alt text.\n      color: 'transparent',\n      // Hide the image broken icon, only works on Chrome.\n      textIndent: 10000\n    },\n\n    /* Styles applied to the fallback icon */\n    fallback: {\n      width: '75%',\n      height: '75%'\n    }\n  };\n};\n\nfunction useLoaded(_ref) {\n  var src = _ref.src,\n      srcSet = _ref.srcSet;\n\n  var _React$useState = React.useState(false),\n      loaded = _React$useState[0],\n      setLoaded = _React$useState[1];\n\n  React.useEffect(function () {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n\n    setLoaded(false);\n    var active = true;\n    var image = new Image();\n    image.src = src;\n    image.srcSet = srcSet;\n\n    image.onload = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('loaded');\n    };\n\n    image.onerror = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('error');\n    };\n\n    return function () {\n      active = false;\n    };\n  }, [src, srcSet]);\n  return loaded;\n}\n\nvar Avatar = React.forwardRef(function Avatar(props, ref) {\n  var alt = props.alt,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      imgProps = props.imgProps,\n      sizes = props.sizes,\n      src = props.src,\n      srcSet = props.srcSet,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'circle' : _props$variant,\n      other = _objectWithoutProperties(props, [\"alt\", \"children\", \"classes\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"]);\n\n  var children = null; // Use a hook instead of onError on the img element to support server-side rendering.\n\n  var loaded = useLoaded({\n    src: src,\n    srcSet: srcSet\n  });\n  var hasImg = src || srcSet;\n  var hasImgNotFailing = hasImg && loaded !== 'error';\n\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/React.createElement(\"img\", _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/React.createElement(Person, {\n      className: classes.fallback\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes.system, classes[variant], className, !hasImgNotFailing && classes.colorDefault),\n    ref: ref\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatar'\n})(Avatar);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    minWidth: 56,\n    flexShrink: 0\n  },\n\n  /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n  alignItemsFlexStart: {\n    marginTop: 8\n  }\n};\n/**\n * A simple wrapper to apply `List` styles to an `Avatar`.\n */\n\nvar ListItemAvatar = React.forwardRef(function ListItemAvatar(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemAvatar'\n})(ListItemAvatar);","import React from \"react\";\nimport { format } from \"date-fns\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nimport { getVillager } from \"../../util/villager\";\n\nimport SessionContext from \"../../context/currentSession\";\n\nimport useVillagerIcons from \"../../hooks/useVillagerIcons\";\n\nimport Page from \"../../components/page\";\n\nconst useStyles = makeStyles(theme => ({\n    list: {\n        marginBottom: theme.spacing(2),\n    },\n    subheader: {\n        backgroundColor: theme.palette.background.paper,\n    },\n    avatar: {\n        color: '#30849e',\n        backgroundColor: '#e5f4fc',\n        borderColor: '#aadcf6',\n        borderWidth: 1,\n        borderStyle: 'solid',\n    },\n}));\n\nexport default function IndexPage() {\n    const classes = useStyles();\n    const { session } = React.useContext(SessionContext);\n\n    const villagerIcons = useVillagerIcons();\n\n    const recentSightings = session.sightings.sort(\n        (a, b) => b.timestamp - a.timestamp\n    );\n    const recentSightingsFormatted = recentSightings.map(sighting => {\n        const islandTimestamp = sighting.timestamp + session.islandOffset;\n        return {\n            villager: getVillager(sighting.villager),\n            date: format(islandTimestamp, \"MMM d, yyyy\"),\n            time: format(islandTimestamp, \"h:mm a\"),\n            icon: villagerIcons[sighting.villager],\n        };\n    });\n    const recentSightingsGroupedByDate = recentSightingsFormatted.reduce(\n        (acc, data) => {\n            (acc[data[\"date\"]] = acc[data[\"date\"]] || []).push(data);\n            return acc;\n        },\n        {}\n    );\n    const pageTitle = `Tracked Villagers ${\n        recentSightings.length ? `(${recentSightings.length})` : \"\"\n    }`;\n    return (\n        <Page title={pageTitle}>\n            <List className={classes.list}>\n                {recentSightings.length\n                    ? Object.keys(recentSightingsGroupedByDate).map(date => (\n                          <React.Fragment key={date}>\n                              <ListSubheader className={classes.subheader}>\n                                  {date}\n                              </ListSubheader>\n                              {recentSightingsGroupedByDate[date].map(data => (\n                                  <ListItem\n                                      key={data.timestamp}\n                                      button\n                                      component=\"a\"\n                                      href={`https://nookipedia.com/wiki/${data.villager.name}`}\n                                      target=\"_blank\"\n                                      rel=\"noopener noreferrer\"\n                                  >\n                                      <ListItemAvatar>\n                                          <Avatar\n                                              className={classes.avatar}\n                                              alt={data.villager.name}\n                                              src={data.icon}\n                                          />\n                                      </ListItemAvatar>\n                                      <ListItemText\n                                          primary={`${data.villager.name} (${data.villager.personality} ${data.villager.species})`}\n                                          secondary={data.time}\n                                      />\n                                  </ListItem>\n                              ))}\n                          </React.Fragment>\n                      ))\n                    : \"\"}\n            </List>\n        </Page>\n    );\n}\n","import { useStaticQuery, graphql } from \"gatsby\";\n\nexport default function useVillagerIcons() {\n    const villagerIconsQuery = useStaticQuery(\n        graphql`\n            query {\n                allFile(\n                    filter: { relativeDirectory: { eq: \"villager-icons\" } }\n                ) {\n                    edges {\n                        node {\n                            publicURL\n                            name\n                        }\n                    }\n                }\n            }\n        `\n    );\n    const villagerIcons = {};\n    villagerIconsQuery.allFile.edges.forEach(edge => {\n        villagerIcons[edge.node.name] = edge.node.publicURL;\n    });\n    return villagerIcons;\n}\n","import villagerData from \"../data/villagers.json\";\n\nexport const VILLAGERS =\n    villagerData &&\n    villagerData.feed &&\n    villagerData.feed.entry &&\n    villagerData.feed.entry.map(v => {\n        return {\n            name: v.gsx$villager.$t,\n            species: v.gsx$species.$t,\n            gender: v.gsx$gender.$t,\n            personality: v.gsx$personality.$t,\n        };\n    });\n\nexport function getVillager(villagerName) {\n    return VILLAGERS && VILLAGERS.find(v => v.name === villagerName);\n}\n\nexport default {\n    VILLAGERS,\n    getVillager,\n};\n"],"sourceRoot":""}
{"version":3,"sources":["webpack://acnh-island-tracker/./src/pages/villagers.js"],"names":["useStyles","makeStyles","theme","list","marginBottom","spacing","subheader","backgroundColor","palette","background","paper","customPagination","flexShrink","marginLeft","controlsWrapper","margin","position","formControl","width","transform","searchInput","paddingLeft","searchIcon","left","top","color","text","hint","pagination","padding","TablePaginationActions","props","classes","useTheme","count","page","rowsPerPage","onChangePage","className","onClick","event","disabled","aria-label","direction","Math","ceil","max","VillagersPage","DEFAULT_PER_PAGE","label","value","allVillagers","useVillagers","React","setPage","villagersPerPage","setVillagersPerPage","searchTerms","setSearchTerms","searchResults","matchSorter","keys","item","personality","species","delayedSearch","debounce","terms","startIndex","endIndex","length","villagersToRender","slice","pageTitle","pageLabel","title","pathname","location","fullWidth","id","type","variant","inputProps","onChange","e","target","map","villager","key","component","rowsPerPageOptions","SelectProps","native","newPage","onChangeRowsPerPage","parseInt","labelRowsPerPage","ActionsComponent"],"mappings":"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","file":"component---src-pages-villagers-js-74be316b024e964d69df.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport { debounce } from \"throttle-debounce\";\r\nimport { matchSorter } from \"match-sorter\";\r\nimport List from \"@material-ui/core/List\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nimport useVillagers from \"../hooks/useVillagers\";\r\nimport VillagerListItem from \"../components/VillagerListItem\";\r\nimport Page from \"../components/Page\";\r\nimport SEO from \"../components/SEO\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    list: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    subheader: {\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    customPagination: {\r\n        flexShrink: 0,\r\n        marginLeft: theme.spacing(2.5),\r\n    },\r\n    controlsWrapper: {\r\n        margin: theme.spacing(2, 5, 1),\r\n        position: \"relative\",\r\n    },\r\n    formControl: {\r\n        width: \"100%\",\r\n        margin: 0,\r\n        \"& .MuiInputLabel-outlined\": {\r\n            transform: `translate(48px, 20px) scale(1)`,\r\n        },\r\n        \"& .MuiInputLabel-outlined.MuiInputLabel-shrink\": {\r\n            transform: `translate(14px, -6px) scale(0.75)`,\r\n        },\r\n    },\r\n    searchInput: {\r\n        paddingLeft: theme.spacing(6),\r\n    },\r\n    searchIcon: {\r\n        position: \"absolute\",\r\n        left: theme.spacing(2),\r\n        top: \"50%\",\r\n        transform: \"translateY(-50%)\",\r\n        color: theme.palette.text.hint,\r\n    },\r\n    pagination: {\r\n        \"& .MuiTablePagination-toolbar\": {\r\n            padding: 0,\r\n        },\r\n    },\r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n    const handleFirstPageButtonClick = event => {\r\n        onChangePage(event, 0);\r\n    };\r\n\r\n    const handleBackButtonClick = event => {\r\n        onChangePage(event, page - 1);\r\n    };\r\n\r\n    const handleNextButtonClick = event => {\r\n        onChangePage(event, page + 1);\r\n    };\r\n\r\n    const handleLastPageButtonClick = event => {\r\n        onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n    };\r\n\r\n    return (\r\n        <div className={classes.customPagination}>\r\n            <IconButton\r\n                onClick={handleFirstPageButtonClick}\r\n                disabled={page === 0}\r\n                aria-label=\"first page\"\r\n            >\r\n                {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleBackButtonClick}\r\n                disabled={page === 0}\r\n                aria-label=\"previous page\"\r\n            >\r\n                {theme.direction === \"rtl\" ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleNextButtonClick}\r\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                aria-label=\"next page\"\r\n            >\r\n                {theme.direction === \"rtl\" ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleLastPageButtonClick}\r\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                aria-label=\"last page\"\r\n            >\r\n                {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n            </IconButton>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function VillagersPage(props) {\r\n    const DEFAULT_PER_PAGE = [10, 25, 50, { label: \"All\", value: -1 }];\r\n    const classes = useStyles();\r\n    const { allVillagers } = useVillagers();\r\n    const [page, setPage] = React.useState(0);\r\n    const [villagersPerPage, setVillagersPerPage] = React.useState(DEFAULT_PER_PAGE[0]);\r\n    const [searchTerms, setSearchTerms] = React.useState(\"\");\r\n    const searchResults = React.useMemo(\r\n        () => matchSorter(allVillagers, searchTerms, {\r\n            keys: [\r\n                \"name\",\r\n                \"species\",\r\n                \"personality\",\r\n                item => `${item.personality} ${item.species}`,\r\n                item => `${item.species} ${item.personality}`,\r\n                \"gender\",\r\n            ],\r\n        }),\r\n        [allVillagers, searchTerms],\r\n    );\r\n    const delayedSearch = React.useMemo(\r\n        () => debounce(250, (terms) => {\r\n            setPage(0);\r\n            setSearchTerms(terms);\r\n        }),\r\n        [setPage, setSearchTerms],\r\n    );\r\n    const startIndex = Math.max(page * villagersPerPage, 0);\r\n    const endIndex = startIndex + (villagersPerPage >= 0 ? villagersPerPage : searchResults.length);\r\n    const villagersToRender = searchResults.slice(startIndex, endIndex);\r\n    const pageTitle = \"Browse Villagers\";\r\n    const pageLabel = `${pageTitle} (${searchResults.length})`;\r\n    return (\r\n        <Page title={pageLabel}>\r\n            <SEO title={pageTitle} pathname={props.location.pathname} />\r\n            <div className={classes.controlsWrapper}>\r\n                <TextField\r\n                    className={classes.formControl}\r\n                    fullWidth={true}\r\n                    id=\"villager-search\"\r\n                    label=\"Name, species, personality\"\r\n                    type=\"search\"\r\n                    variant=\"outlined\"\r\n                    inputProps={{ className: classes.searchInput }}\r\n                    onChange={(e) => delayedSearch(e.target.value)}\r\n                />\r\n                <SearchIcon className={classes.searchIcon} />\r\n            </div>\r\n            <List className={classes.list}>\r\n                {villagersToRender.map(villager => (\r\n                    <VillagerListItem\r\n                        key={villager.id}\r\n                        villager={villager}\r\n                    />\r\n                ))}\r\n            </List>\r\n            <TablePagination\r\n                className={classes.pagination}\r\n                component=\"div\"\r\n                rowsPerPageOptions={DEFAULT_PER_PAGE}\r\n                count={searchResults.length}\r\n                rowsPerPage={villagersPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                    inputProps: { \"aria-label\": \"villagers per page\" },\r\n                    native: true,\r\n                }}\r\n                onChangePage={(event, newPage) => {\r\n                    setPage(newPage);\r\n                }}\r\n                onChangeRowsPerPage={event => {\r\n                    setVillagersPerPage(parseInt(event.target.value, 10));\r\n                    setPage(0);\r\n                }}\r\n                labelRowsPerPage=\"\"\r\n                ActionsComponent={TablePaginationActions}\r\n            />\r\n        </Page>\r\n    );\r\n}\r\n"],"sourceRoot":""}
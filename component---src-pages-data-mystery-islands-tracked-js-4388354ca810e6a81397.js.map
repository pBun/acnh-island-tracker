{"version":3,"sources":["webpack:///./src/pages/data/mystery-islands/tracked.js","webpack:///./src/components/TrackedVillagersList.js"],"names":["useStyles","makeStyles","theme","list","marginBottom","spacing","subheader","backgroundColor","palette","background","paper","customPagination","flexShrink","marginLeft","controlsWrapper","margin","position","formControl","width","transform","searchInput","paddingLeft","searchIcon","left","top","color","text","hint","pagination","padding","TablePaginationActions","props","classes","useTheme","count","page","rowsPerPage","onChangePage","className","onClick","event","disabled","aria-label","direction","Math","ceil","max","TrackedMysteryIslandVillagersPage","DEFAULT_PER_PAGE","label","value","filteredSightings","React","useContext","SessionContext","sightings","filter","s","type","useState","setPage","villagersPerPage","setVillagersPerPage","searchTerms","setSearchTerms","searchResults","useCallback","matchSorter","keys","item","villager","personality","species","sort","a","b","timestamp","delayedSearch","debounce","terms","startIndex","endIndex","length","sightingsToRender","slice","pageLabel","pageTitle","title","pathname","location","fullWidth","id","variant","inputProps","onChange","e","target","component","rowsPerPageOptions","SelectProps","native","newPage","onChangeRowsPerPage","parseInt","labelRowsPerPage","ActionsComponent","listSubheader","paddingRight","TrackedVillagersList","otherProps","getVillager","useVillagers","sortedSightings","formattedSightings","map","sighting","index","date","format","sightingsGroupedByDate","groupBy","Object","Fragment","key"],"mappings":"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","file":"component---src-pages-data-mystery-islands-tracked-js-4388354ca810e6a81397.js","sourcesContent":["import React from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { debounce } from \"throttle-debounce\";\nimport matchSorter from \"match-sorter\";\nimport TextField from \"@material-ui/core/TextField\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nimport SessionContext from \"../../../context/SessionContext\";\n\nimport Page from \"../../../components/Page\";\nimport SEO from \"../../../components/SEO\";\nimport TrackedVillagersList from \"../../../components/TrackedVillagersList\";\n\nconst useStyles = makeStyles(theme => ({\n    list: {\n        marginBottom: theme.spacing(2),\n    },\n    subheader: {\n        backgroundColor: theme.palette.background.paper,\n    },\n    customPagination: {\n        flexShrink: 0,\n        marginLeft: theme.spacing(2.5),\n    },\n    controlsWrapper: {\n        margin: theme.spacing(2, 5, 1),\n        position: \"relative\",\n    },\n    formControl: {\n        width: \"100%\",\n        margin: 0,\n        \"& .MuiInputLabel-outlined\": {\n            transform: `translate(48px, 20px) scale(1)`,\n        },\n        \"& .MuiInputLabel-outlined.MuiInputLabel-shrink\": {\n            transform: `translate(14px, -6px) scale(0.75)`,\n        },\n    },\n    searchInput: {\n        paddingLeft: theme.spacing(6),\n    },\n    searchIcon: {\n        position: \"absolute\",\n        left: theme.spacing(2),\n        top: \"50%\",\n        transform: \"translateY(-50%)\",\n        color: theme.palette.text.hint,\n    },\n    pagination: {\n        \"& .MuiTablePagination-toolbar\": {\n            padding: 0,\n        },\n    },\n}));\n\nfunction TablePaginationActions(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const { count, page, rowsPerPage, onChangePage } = props;\n\n    const handleFirstPageButtonClick = event => {\n        onChangePage(event, 0);\n    };\n\n    const handleBackButtonClick = event => {\n        onChangePage(event, page - 1);\n    };\n\n    const handleNextButtonClick = event => {\n        onChangePage(event, page + 1);\n    };\n\n    const handleLastPageButtonClick = event => {\n        onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n    };\n\n    return (\n        <div className={classes.customPagination}>\n            <IconButton\n                onClick={handleFirstPageButtonClick}\n                disabled={page === 0}\n                aria-label=\"first page\"\n            >\n                {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n            </IconButton>\n            <IconButton\n                onClick={handleBackButtonClick}\n                disabled={page === 0}\n                aria-label=\"previous page\"\n            >\n                {theme.direction === \"rtl\" ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n            </IconButton>\n            <IconButton\n                onClick={handleNextButtonClick}\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n                aria-label=\"next page\"\n            >\n                {theme.direction === \"rtl\" ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n            </IconButton>\n            <IconButton\n                onClick={handleLastPageButtonClick}\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n                aria-label=\"last page\"\n            >\n                {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n            </IconButton>\n        </div>\n    );\n}\n\nfunction TrackedMysteryIslandVillagersPage(props) {\n    const DEFAULT_PER_PAGE = [10, 25, 50, { label: \"All\", value: -1 }];\n    const classes = useStyles();\n    const { sightings } = React.useContext(SessionContext);\n\n    const filteredSightings = sightings.filter(s => s.type === \"mystery-island\");\n    const [page, setPage] = React.useState(0);\n    const [villagersPerPage, setVillagersPerPage] = React.useState(DEFAULT_PER_PAGE[0]);\n    const [searchTerms, setSearchTerms] = React.useState(\"\");\n    const searchResults = React.useCallback(\n        matchSorter(filteredSightings, searchTerms, {\n            keys: [\n                \"villager.name\",\n                \"villager.species\",\n                \"villager.personality\",\n                item => `${item.villager.personality} ${item.villager.species}`,\n                item => `${item.villager.species} ${item.villager.personality}`,\n                \"villager.gender\",\n            ],\n        }).sort((a, b) => b.timestamp - a.timestamp),\n        [filteredSightings, searchTerms],\n    );\n    const delayedSearch = React.useCallback(\n        debounce(250, (terms) => {\n            setPage(0);\n            setSearchTerms(terms);\n        }),\n        [setPage, setSearchTerms],\n    );\n    const startIndex = Math.max(page * villagersPerPage, 0);\n    const endIndex = startIndex + (villagersPerPage >= 0 ? villagersPerPage : searchResults.length);\n    const sightingsToRender = searchResults.slice(startIndex, endIndex);\n    const pageTitle = \"Mystery Island Encounters\";\n    const pageLabel = `${pageTitle} ${\n        searchResults.length ? `(${searchResults.length})` : \"\"\n    }`;\n    return (\n        <Page title={pageLabel}>\n            <SEO title={pageTitle} pathname={props.location.pathname} />\n            <div className={classes.controlsWrapper}>\n                <TextField\n                    className={classes.formControl}\n                    fullWidth={true}\n                    id=\"villager-search\"\n                    label=\"Name, species, personality\"\n                    type=\"search\"\n                    variant=\"outlined\"\n                    value={searchTerms}\n                    inputProps={{ className: classes.searchInput }}\n                    onChange={(e) => delayedSearch(e.target.value)}\n                />\n                <SearchIcon className={classes.searchIcon} />\n            </div>\n            <TrackedVillagersList\n                sightings={sightingsToRender}\n            />\n            <TablePagination\n                className={classes.pagination}\n                component=\"div\"\n                rowsPerPageOptions={DEFAULT_PER_PAGE}\n                count={searchResults.length}\n                rowsPerPage={villagersPerPage}\n                page={page}\n                SelectProps={{\n                    inputProps: { \"aria-label\": \"villagers per page\" },\n                    native: true,\n                }}\n                onChangePage={(event, newPage) => {\n                    setPage(newPage);\n                }}\n                onChangeRowsPerPage={event => {\n                    setVillagersPerPage(parseInt(event.target.value, 10));\n                    setPage(0);\n                }}\n                labelRowsPerPage=\"\"\n                ActionsComponent={TablePaginationActions}\n            />\n        </Page>\n    );\n}\n\nexport default TrackedMysteryIslandVillagersPage;\n","import React from \"react\";\nimport { format } from \"date-fns\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\n\nimport { groupBy } from \"../util/list\";\nimport useVillagers from \"../hooks/useVillagers\";\nimport VillagerListItem from \"../components/VillagerListItem\";\n\nconst useStyles = makeStyles(theme => ({\n    list: {\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(1, 0, 4),\n    },\n    listSubheader: {\n        paddingLeft: theme.spacing(5),\n        paddingRight: theme.spacing(5),\n        backgroundColor: theme.palette.background.paper,\n    },\n}));\n\nexport default function TrackedVillagersList(props) {\n    const classes = useStyles();\n    const {\n        sightings,\n        ...otherProps\n    } = props;\n\n    const { getVillager } = useVillagers();\n\n    const sortedSightings = sightings.sort((a, b) => b.timestamp - a.timestamp);\n    const formattedSightings = sortedSightings.map((sighting, index) => {\n        const villager = getVillager(sighting.villager.id);\n        return {\n            ...sighting,\n            date: format(sighting.timestamp, \"MMM d, yyyy\"),\n            villager,\n        };\n    });\n    const sightingsGroupedByDate = groupBy(formattedSightings, 'date');\n    return (\n        <List className={classes.list} {...otherProps}>\n            {sortedSightings.length ? (\n                Object.keys(sightingsGroupedByDate).map(date => (\n                    <React.Fragment key={date}>\n                        <ListSubheader className={classes.listSubheader}>{date}</ListSubheader>\n                        {sightingsGroupedByDate[date].map(sighting => (\n                            <VillagerListItem\n                                key={sighting.timestamp}\n                                villager={sighting.villager}\n                                sighting={sighting}\n                            />\n                        ))}\n                    </React.Fragment>\n                ))\n            ) : (\n                <ListSubheader className={classes.listSubheader}>\n                    No encounters to display\n                </ListSubheader>\n            )}\n        </List>\n    );\n}\n"],"sourceRoot":""}
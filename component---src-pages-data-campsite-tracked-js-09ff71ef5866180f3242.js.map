{"version":3,"sources":["webpack:///./src/components/TrackedVillagersList.js","webpack:///./src/pages/data/campsite/tracked.js"],"names":["useStyles","makeStyles","theme","list","marginBottom","spacing","padding","listSubheader","paddingLeft","paddingRight","backgroundColor","palette","background","paper","TrackedVillagersList","props","classes","sightings","otherProps","getVillager","useVillagers","sortedSightings","sort","a","b","timestamp","formattedSightings","map","sighting","index","villager","id","date","format","sightingsGroupedByDate","groupBy","className","length","Object","keys","Fragment","key","subheader","customPagination","flexShrink","marginLeft","controlsWrapper","margin","position","formControl","width","transform","searchInput","searchIcon","left","top","color","text","hint","pagination","TablePaginationActions","useTheme","count","page","rowsPerPage","onChangePage","onClick","event","disabled","aria-label","direction","Math","ceil","max","TrackedCampsiteVillagersPage","filteredSightings","React","useContext","SessionContext","filter","s","type","useState","setPage","villagersPerPage","setVillagersPerPage","searchTerms","setSearchTerms","searchResults","matchSorter","item","personality","species","startIndex","endIndex","sightingsToRender","slice","pageLabel","pageTitle","title","pathname","location","fullWidth","label","variant","value","inputProps","onChange","e","target","component","rowsPerPageOptions","SelectProps","native","newPage","onChangeRowsPerPage","parseInt","labelRowsPerPage","ActionsComponent"],"mappings":"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","file":"component---src-pages-data-campsite-tracked-js-09ff71ef5866180f3242.js","sourcesContent":["import React from \"react\";\nimport { format } from \"date-fns\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\n\nimport { groupBy } from \"../util/list\";\nimport useVillagers from \"../hooks/useVillagers\";\nimport VillagerListItem from \"../components/VillagerListItem\";\n\nconst useStyles = makeStyles(theme => ({\n    list: {\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(1, 0, 4),\n    },\n    listSubheader: {\n        paddingLeft: theme.spacing(5),\n        paddingRight: theme.spacing(5),\n        backgroundColor: theme.palette.background.paper,\n    },\n}));\n\nexport default function TrackedVillagersList(props) {\n    const classes = useStyles();\n    const {\n        sightings,\n        ...otherProps\n    } = props;\n\n    const { getVillager } = useVillagers();\n\n    const sortedSightings = sightings.sort((a, b) => b.timestamp - a.timestamp);\n    const formattedSightings = sortedSightings.map((sighting, index) => {\n        const villager = getVillager(sighting.villager.id);\n        return {\n            ...sighting,\n            date: format(sighting.timestamp, \"MMM d, yyyy\"),\n            villager,\n        };\n    });\n    const sightingsGroupedByDate = groupBy(formattedSightings, 'date');\n    return (\n        <List className={classes.list} {...otherProps}>\n            {sortedSightings.length ? (\n                Object.keys(sightingsGroupedByDate).map(date => (\n                    <React.Fragment key={date}>\n                        <ListSubheader className={classes.listSubheader}>{date}</ListSubheader>\n                        {sightingsGroupedByDate[date].map(sighting => (\n                            <VillagerListItem\n                                key={sighting.timestamp}\n                                villager={sighting.villager}\n                                sighting={sighting}\n                            />\n                        ))}\n                    </React.Fragment>\n                ))\n            ) : (\n                <ListSubheader className={classes.listSubheader}>\n                    No villagers tracked\n                </ListSubheader>\n            )}\n        </List>\n    );\n}\n","import React from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport matchSorter from \"match-sorter\";\nimport TextField from \"@material-ui/core/TextField\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nimport SessionContext from \"../../../context/SessionContext\";\n\nimport Page from \"../../../components/Page\";\nimport SEO from \"../../../components/SEO\";\nimport TrackedVillagersList from \"../../../components/TrackedVillagersList\";\n\nconst useStyles = makeStyles(theme => ({\n    list: {\n        marginBottom: theme.spacing(2),\n    },\n    subheader: {\n        backgroundColor: theme.palette.background.paper,\n    },\n    customPagination: {\n        flexShrink: 0,\n        marginLeft: theme.spacing(2.5),\n    },\n    controlsWrapper: {\n        margin: theme.spacing(2, 5, 1),\n        position: \"relative\",\n    },\n    formControl: {\n        width: \"100%\",\n        margin: 0,\n        \"& .MuiInputLabel-outlined\": {\n            transform: `translate(48px, 20px) scale(1)`,\n        },\n        \"& .MuiInputLabel-outlined.MuiInputLabel-shrink\": {\n            transform: `translate(14px, -6px) scale(0.75)`,\n        },\n    },\n    searchInput: {\n        paddingLeft: theme.spacing(6),\n    },\n    searchIcon: {\n        position: \"absolute\",\n        left: theme.spacing(2),\n        top: \"50%\",\n        transform: \"translateY(-50%)\",\n        color: theme.palette.text.hint,\n    },\n    pagination: {\n        \"& .MuiTablePagination-toolbar\": {\n            padding: 0,\n        },\n    },\n}));\n\nfunction TablePaginationActions(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const { count, page, rowsPerPage, onChangePage } = props;\n\n    const handleFirstPageButtonClick = event => {\n        onChangePage(event, 0);\n    };\n\n    const handleBackButtonClick = event => {\n        onChangePage(event, page - 1);\n    };\n\n    const handleNextButtonClick = event => {\n        onChangePage(event, page + 1);\n    };\n\n    const handleLastPageButtonClick = event => {\n        onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n    };\n\n    return (\n        <div className={classes.customPagination}>\n            <IconButton\n                onClick={handleFirstPageButtonClick}\n                disabled={page === 0}\n                aria-label=\"first page\"\n            >\n                {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n            </IconButton>\n            <IconButton\n                onClick={handleBackButtonClick}\n                disabled={page === 0}\n                aria-label=\"previous page\"\n            >\n                {theme.direction === \"rtl\" ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n            </IconButton>\n            <IconButton\n                onClick={handleNextButtonClick}\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n                aria-label=\"next page\"\n            >\n                {theme.direction === \"rtl\" ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n            </IconButton>\n            <IconButton\n                onClick={handleLastPageButtonClick}\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n                aria-label=\"last page\"\n            >\n                {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n            </IconButton>\n        </div>\n    );\n}\n\nfunction TrackedCampsiteVillagersPage(props) {\n    const classes = useStyles();\n    const { sightings } = React.useContext(SessionContext);\n\n    const filteredSightings = sightings.filter(s => s.type === \"campsite\");\n    const [page, setPage] = React.useState(0);\n    const [villagersPerPage, setVillagersPerPage] = React.useState(10);\n    const [searchTerms, setSearchTerms] = React.useState(\"\");\n    const searchResults = matchSorter(filteredSightings, searchTerms, {\n        keys: [\n            \"villager.name\",\n            \"villager.species\",\n            \"villager.personality\",\n            item => `${item.villager.personality} ${item.villager.species}`,\n            item => `${item.villager.species} ${item.villager.personality}`,\n            \"villager.gender\",\n        ],\n    });\n    const startIndex = Math.max(page * villagersPerPage, 0);\n    const endIndex = startIndex + (villagersPerPage >= 0 ? villagersPerPage : searchResults.length);\n    const sightingsToRender = searchResults.slice(startIndex, endIndex);\n    const pageTitle = \"Campsite Encounters\";\n    const pageLabel = `${pageTitle} ${\n        searchResults.length ? `(${searchResults.length})` : \"\"\n    }`;\n\n    return (\n        <Page title={pageLabel}>\n            <SEO title={pageTitle} pathname={props.location.pathname} />\n            <div className={classes.controlsWrapper}>\n                <TextField\n                    className={classes.formControl}\n                    fullWidth={true}\n                    id=\"villager-search\"\n                    label=\"Name, species, personality\"\n                    type=\"search\"\n                    variant=\"outlined\"\n                    value={searchTerms}\n                    inputProps={{ className: classes.searchInput }}\n                    onChange={e => {\n                        setSearchTerms(e.target.value);\n                        setPage(0);\n                    }}\n                />\n                <SearchIcon className={classes.searchIcon} />\n            </div>\n            <TrackedVillagersList\n                sightings={sightingsToRender}\n            />\n            <TablePagination\n                className={classes.pagination}\n                component=\"div\"\n                rowsPerPageOptions={[10, 25, 50, { label: \"All\", value: -1 }]}\n                count={searchResults.length}\n                rowsPerPage={villagersPerPage}\n                page={page}\n                SelectProps={{\n                    inputProps: { \"aria-label\": \"villagers per page\" },\n                    native: true,\n                }}\n                onChangePage={(event, newPage) => {\n                    setPage(newPage);\n                }}\n                onChangeRowsPerPage={event => {\n                    setVillagersPerPage(parseInt(event.target.value, 10));\n                    setPage(0);\n                }}\n                labelRowsPerPage=\"\"\n                ActionsComponent={TablePaginationActions}\n            />\n        </Page>\n    );\n}\n\nexport default TrackedCampsiteVillagersPage;\n"],"sourceRoot":""}